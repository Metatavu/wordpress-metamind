// tslint:disable
// eslint-disable
/**
 * Metamind API
 * Brain spec for Metamind.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Session
 */
export interface Session {
    /**
     * Session id.
     * @type {string}
     * @memberof Session
     */
    readonly id?: string;
    /**
     * Session locale
     * @type {string}
     * @memberof Session
     */
    locale: string;
    /**
     * Session time zone
     * @type {string}
     * @memberof Session
     */
    timeZone: string;
    /**
     * Visitor details
     * @type {string}
     * @memberof Session
     */
    visitor: string;
    /**
     * Story id
     * @type {string}
     * @memberof Session
     */
    readonly storyId?: string;
    /**
     * Creation time
     * @type {Date}
     * @memberof Session
     */
    readonly createdAt?: Date;
    /**
     * Last modification time
     * @type {Date}
     * @memberof Session
     */
    readonly modifiedAt?: Date;
}

export function SessionFromJSON(json: any): Session {
    return SessionFromJSONTyped(json, false);
}

export function SessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Session {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'locale': json['locale'],
        'timeZone': json['timeZone'],
        'visitor': json['visitor'],
        'storyId': !exists(json, 'storyId') ? undefined : json['storyId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function SessionToJSON(value?: Session | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locale': value.locale,
        'timeZone': value.timeZone,
        'visitor': value.visitor,
    };
}


