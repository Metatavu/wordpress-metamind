// tslint:disable
// eslint-disable
/**
 * Metamind API
 * Brain spec for Metamind.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TrainingMaterialType,
    TrainingMaterialTypeFromJSON,
    TrainingMaterialTypeFromJSONTyped,
    TrainingMaterialTypeToJSON,
    TrainingMaterialVisibility,
    TrainingMaterialVisibilityFromJSON,
    TrainingMaterialVisibilityFromJSONTyped,
    TrainingMaterialVisibilityToJSON,
} from './';

/**
 * 
 * @export
 * @interface TrainingMaterial
 */
export interface TrainingMaterial {
    /**
     * intent id.
     * @type {string}
     * @memberof TrainingMaterial
     */
    readonly id?: string;
    /**
     * 
     * @type {TrainingMaterialType}
     * @memberof TrainingMaterial
     */
    type?: TrainingMaterialType;
    /**
     * 
     * @type {string}
     * @memberof TrainingMaterial
     */
    storyId?: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingMaterial
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingMaterial
     */
    name: string;
    /**
     * 
     * @type {TrainingMaterialVisibility}
     * @memberof TrainingMaterial
     */
    visibility?: TrainingMaterialVisibility;
    /**
     * Creation time
     * @type {Date}
     * @memberof TrainingMaterial
     */
    readonly createdAt?: Date;
    /**
     * Last modification time
     * @type {Date}
     * @memberof TrainingMaterial
     */
    readonly modifiedAt?: Date;
}

export function TrainingMaterialFromJSON(json: any): TrainingMaterial {
    return TrainingMaterialFromJSONTyped(json, false);
}

export function TrainingMaterialFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrainingMaterial {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : TrainingMaterialTypeFromJSON(json['type']),
        'storyId': !exists(json, 'storyId') ? undefined : json['storyId'],
        'text': json['text'],
        'name': json['name'],
        'visibility': !exists(json, 'visibility') ? undefined : TrainingMaterialVisibilityFromJSON(json['visibility']),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function TrainingMaterialToJSON(value?: TrainingMaterial | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': TrainingMaterialTypeToJSON(value.type),
        'storyId': value.storyId,
        'text': value.text,
        'name': value.name,
        'visibility': TrainingMaterialVisibilityToJSON(value.visibility),
    };
}


