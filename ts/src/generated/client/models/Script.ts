// tslint:disable
// eslint-disable
/**
 * Metamind API
 * Brain spec for Metamind.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Script
 */
export interface Script {
    /**
     * Script id
     * @type {string}
     * @memberof Script
     */
    readonly id?: string;
    /**
     * Script name
     * @type {string}
     * @memberof Script
     */
    name: string;
    /**
     * Script version
     * @type {string}
     * @memberof Script
     */
    version: string;
    /**
     * Script language
     * @type {string}
     * @memberof Script
     */
    language: string;
    /**
     * Script content
     * @type {string}
     * @memberof Script
     */
    content: string;
    /**
     * Creation time
     * @type {Date}
     * @memberof Script
     */
    readonly createdAt?: Date;
    /**
     * Last modification time
     * @type {Date}
     * @memberof Script
     */
    readonly modifiedAt?: Date;
}

export function ScriptFromJSON(json: any): Script {
    return ScriptFromJSONTyped(json, false);
}

export function ScriptFromJSONTyped(json: any, ignoreDiscriminator: boolean): Script {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'version': json['version'],
        'language': json['language'],
        'content': json['content'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function ScriptToJSON(value?: Script | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'version': value.version,
        'language': value.language,
        'content': value.content,
    };
}


